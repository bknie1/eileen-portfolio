import * as React from "react"

const Logo = (props) => (
  <svg
    viewBox="0 0 16 16"
    id="SVGRoot"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g
      id="layer4"
      style={{
        display: "inline",
      }}
    >
      <g id="g962" transform="matrix(.02148 0 0 .02177 7.222 6.094)">
        <g
          id="g1071"
          transform="translate(-410.045 -428.179)"
          style={{
            display: "inline",
          }}
        >
          <path
            style={{
              display: "inline",
              fill: "#39ff14",
              fillOpacity: 1,
              stroke: "#39ff14",
              strokeWidth: 0.807242,
              strokeOpacity: 1,
            }}
            d="M717.345 765.058c-8.646-3.888-61.902-26.108-98.174-40.961-91.3-37.387-162.987-64.822-215.506-82.476-36.532-12.28-56.69-17.786-75.29-20.565-37.11-5.544-64.147-14.106-86.739-27.467-7.756-4.587-15.877-10.543-16.447-12.063-.213-.567 1.821-4.856 4.52-9.53 2.7-4.674 5.585-9.851 6.411-11.504l1.502-3.006-10.8-23.12c-5.94-12.715-12.246-26.058-14.014-29.65l-3.216-6.532-7.089-65.313c-9.801-90.314-9.105-81.902-7.188-86.878 2.093-5.43 11.268-24.205 15.396-31.503 1.778-3.143 6.563-10.859 10.633-17.145 7.235-11.177 7.49-11.737 11.526-25.309 11.213-37.715 12.409-41.23 14.026-41.23.238 0 10.148-1.663 22.021-3.697l21.588-3.699 4.898-3.558c33.596-24.405 80.452-41.031 133.803-47.478 5.927-.716 20.653-1.499 32.725-1.74 12.073-.24 22.512-.737 23.2-1.104 1.39-.742 21.899.973 35.466 2.966 58.953 8.661 112.976 34.608 152.577 73.283 13.956 13.628 35.392 40.245 35.392 43.944 0 .967 2.107 5.098 4.684 9.18 10.505 16.646 20.596 37.24 28.64 58.449 7.365 19.418 9.512 26.697 8.407 28.506-.837 1.37-.549 1.555 3.219 2.06 6.33.85 7.34 1.903 10.016 10.45 11.068 35.354 18.907 81.214 21.735 127.166 1.044 16.968.532 66.37-.824 79.54-1.066 10.347-2.31 12.055-8.6 11.794-2.318-.096-4.365-.02-4.547.17-.183.189-1.286 5.841-2.452 12.56-7.434 42.853-19.559 81.735-36.035 115.553-6.72 13.794-10.961 21.251-12.054 21.195-.339-.018-1.873-.598-3.41-1.288zM426.74 441.808c-5.063-1.596-10.475-6.69-12.683-11.94-4.752-11.298 2.262-24.913 14.299-27.755 11.999-2.833 23.865 7.12 24.018 20.144.02 1.79.215 2.12.722 1.225.962-1.7-.295-8.972-2.206-12.766-6.913-13.724-25.3-15.867-35.797-4.172-3.53 3.933-5.84 9.967-5.84 15.249.001 3.004 3.575 11.404 6.134 14.416 3.1 3.65 9.048 6.73 13.022 6.745 1.33.005.772-.377-1.669-1.147zM750 387.17c-1.578-.39-86.88-12.118-109.279-14.68-40.267-4.603-81.235-8.415-110.204-10.253-14.075-.894-25.399-.257-28.518 1.604-1.451.865-1.163 1.01 2.926.324 1.03-.173 2.302-.398 3.848-.678 6.905-1.25 6.962-1.247 41.356 1.576 8.34.684 18.757 1.425 23.147 1.646 12.384.624 61.58 5.84 96.18 10.199 10.301 1.297 83.756 11.059 80.544 10.262zm-249.757-22.062a.405.405 0 0 0-.399-.408c-.22 0-.399.183-.399.408 0 .224.18.408.4.408.219 0 .398-.184.398-.408zM527.385 210c-2.612-7.765-7.04-14.98-12.981-21.148-5.394-5.6-5.46-5.64-1.861-1.146 3.728 4.658 12.444 18.303 12.444 19.482 0 1.211 3.238 8.333 3.613 7.948.21-.214-.337-2.525-1.215-5.136z"
            id="path2037-6-8"
          />
          <path
            style={{
              display: "inline",
              fill: "#252525",
              fillOpacity: 1,
              stroke: "none",
              strokeOpacity: 1,
            }}
            d="M731.61 880.203c-10.833-4.762-77.556-31.978-123-50.17-114.387-45.794-204.2-79.398-270-101.022-45.77-15.041-71.025-21.785-94.328-25.19-46.495-6.79-80.368-17.278-108.672-33.643-9.718-5.618-19.893-12.914-20.607-14.775-.267-.695 2.282-5.949 5.664-11.674 3.382-5.725 6.996-12.065 8.031-14.09l1.882-3.682-13.53-28.318c-7.442-15.575-15.343-31.919-17.56-36.319l-4.028-8-8.88-80C74.3 362.7 75.171 373.002 77.574 366.907c2.622-6.651 14.118-29.648 19.29-38.587 2.227-3.85 8.221-13.3 13.32-21 9.066-13.69 9.386-14.376 14.441-31 14.05-46.196 15.547-50.5 17.573-50.5.298 0 12.714-2.038 27.59-4.53l27.046-4.53 6.137-4.358c42.091-29.893 100.796-50.258 167.638-58.154 7.425-.877 25.875-1.836 41-2.13 15.125-.295 28.204-.904 29.065-1.353 1.741-.91 27.437 1.192 44.435 3.633 73.86 10.608 141.543 42.39 191.16 89.76 17.483 16.694 44.34 49.295 44.34 53.827 0 1.184 2.64 6.244 5.868 11.244 13.162 20.389 25.804 45.612 35.883 71.591 9.227 23.785 11.917 32.7 10.533 34.916-1.049 1.68-.688 1.905 4.032 2.524 7.931 1.04 9.196 2.33 12.549 12.8 13.867 43.303 23.688 99.475 27.231 155.76 1.309 20.784.667 81.295-1.032 97.426-1.336 12.674-2.895 14.765-10.775 14.446-2.904-.118-5.468-.024-5.697.207-.23.232-1.611 7.155-3.072 15.386-9.313 52.488-24.504 100.113-45.146 141.535-8.42 16.896-13.734 26.03-15.102 25.961-.425-.021-2.347-.731-4.272-1.578zM367.519 484.267c-6.344-1.955-13.124-8.194-15.89-14.624-5.954-13.84 2.833-30.516 17.914-33.997 15.033-3.47 29.9 8.72 30.091 24.674.027 2.192.27 2.596.905 1.5 1.205-2.082-.37-10.989-2.764-15.636-8.66-16.81-31.698-19.435-44.849-5.11-4.422 4.817-7.317 12.208-7.316 18.678.001 3.68 4.479 13.968 7.684 17.657 3.886 4.47 11.336 8.244 16.316 8.263 1.665.006.967-.463-2.091-1.405zm405.002-66.923c-1.977-.48-108.848-14.844-136.911-17.98-50.45-5.64-101.777-10.309-138.072-12.56-17.634-1.095-31.82-.315-35.728 1.964-1.819 1.06-1.458 1.237 3.665.397 1.29-.211 2.884-.487 4.82-.83 8.652-1.53 8.724-1.527 51.815 1.93 10.45.838 23.5 1.746 29 2.017 15.515.764 77.152 7.154 120.5 12.491 12.907 1.59 104.935 13.546 100.911 12.57zM459.61 390.32c0-.275-.225-.5-.5-.5s-.5.225-.5.5.225.5.5.5.5-.225.5-.5zm34.004-189.985c-3.272-9.511-8.82-18.35-16.263-25.904-6.758-6.86-6.84-6.91-2.332-1.403 4.67 5.705 15.59 22.418 15.59 23.862 0 1.484 4.057 10.207 4.528 9.736.263-.263-.422-3.094-1.523-6.291z"
            id="path2037-63"
          />
        </g>
        <g id="g3290" transform="rotate(15 -1074.575 399.682) scale(3)">
          <path
            style={{
              fill: "#39ff14",
              fillOpacity: 1,
              strokeOpacity: 0.501961,
            }}
            id="path3184"
            d="M-137.156-111.207c.04.32-.076.636-.05.953.035.428.171.843.205 1.27.06.753.067 4.202.026 4.632-.103 1.088-.36 2.157-.54 3.236-.258 1.11-.525 2.217-.775 3.328-.498 2.22-.87 3.97-1.261 6.2-.522 2.976-.334 2.202-.737 5.033-.093.659-.203 1.315-.305 1.973-.103.647-.473 2.099-.115 2.814.57 1.137 1.864 1.37 2.966 1.558 1.002.171 2.021.215 3.034.297 1.428.115 2.858.195 4.288.293 1.546.202 3.103.341 4.64.605 4.047.693 8.086 1.864 11.758 3.728.395.2.77.44 1.154.66.367.256.781.518 1.112.831a.9.9 0 0 1 .191.23c.032.06-.024.237.032.2 4.1-2.755 8.131-5.61 12.197-8.415l-12.58 8 12.387-8.28c-.1.066-.185.157-.296.196-.2.07-.413.092-.622.123-.989.144-1.444.139-2.52.198-.714.013-1.43.044-2.144.04-2.064-.012-4.327-.11-6.367-.319-1.351-.138-2.704-.29-4.042-.525-1.391-.243-2.78-.52-4.14-.906-1.23-.35-2.41-.866-3.615-1.299-2.133-1.144-2.477-1.253-4.28-2.447-.327-.216-.64-.454-.954-.69-.494-.37-.795-.573-1.082-1.157-.18-.366-.273-.769-.409-1.153-.12-.527-.278-1.047-.36-1.582-.198-1.275-.274-3.167-.27-4.425.001-.895.01-1.791.081-2.683.211-2.618.508-3.661 1.038-6.274 1.21-4.032.748-2.988 2.515-6.855.794-1.737 1.565-3.446 2.993-4.762.159-.147.344-.263.516-.394l-13.669 5.768z"
          />
          <path
            style={{
              fill: "#39ff14",
              fillOpacity: 1,
              strokeOpacity: 0.501961,
            }}
            id="path3186"
            d="M-137.303-93.836a15.38 15.38 0 0 1 5.55-.646c.84.057 1.676.195 2.506.343 1.976.35 3.368.759 5.307 1.269 1.774.485 2.997.791 4.719 1.362.569.188 1.127.409 1.69.614l9.412-6.554c-.753-.063-1.51-.097-2.26-.189-2.433-.298-2.689-.438-5.095-1.03-.838-.261-1.682-.502-2.513-.784-.24-.082-4.012-1.488-4.386-1.63-.525-.199-1.991-.71-2.589-1.11-.138-.091-.216-.25-.325-.375l-12.016 8.73z"
          />
          <path
            style={{
              fill: "#39ff14",
              fillOpacity: 1,
              strokeOpacity: 0.501961,
            }}
            id="path3188"
            d="M-137.771-109.078c.125-.038.248-.087.376-.114 1.249-.265 2.561-.277 3.83-.284 2.548-.013 2.032.001 4.604.208 2.952-.026 5.899.24 8.797.806 1.447.282 2.615.627 4.028.993.547.142 1.095.277 1.642.416l1.252.406 10.114-7.116-1.752-.054c-3.236-.234-.861-.069-4.375-.293-3.561-.227-7.166-.434-10.575-1.59-2.007-.455-1.75-.328-3.545-.969-.811-.29-1.644-.615-2.294-1.202l-12.102 8.793z"
          />
        </g>
      </g>
    </g>
    <script id="mesh_polyfill" type="text/javascript">
      {
        '!function(){const t="http://www.w3.org/2000/svg",e="http://www.w3.org/1999/xlink",s="http://www.w3.org/1999/xhtml",r=2;if(document.createElementNS(t,"meshgradient").x)return;const n=(t,e,s,r)=>{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=>{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e>s?e:s,i=r>n?r:n;return 18*(o>i?o:i)},i=(t,e)=>Math.sqrt(t.distSquared(e)),a=(t,e)=>t.scale(2/3).add(e.scale(1/3)),h=t=>{let e,s,r,n,o,i,a,h=new g;return t.match(/(\\w+\\(\\s*[^)]+\\))+/g).forEach(t=>{let l=t.match(/[\\w.-]+/g),d=l.shift();switch(d){case"translate":2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error("mesh.js: translate does not have 2 arguments!"),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case"scale":1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error("mesh.js: scale does not have 1 or 2 arguments!"),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case"rotate":if(3===l.length&&(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)<1e-16&&(t=0),Math.abs(e)<1e-16&&(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error("math.js: No argument to rotate transform!");3===l.length&&(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case"skewX":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error("math.js: No argument to skewX transform!");break;case"skewY":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error("math.js: No argument to skewY transform!");break;case"matrix":6===l.length?h=h.append(new g(...l)):console.error("math.js: Incorrect number of arguments for matrix!");break;default:console.error("mesh.js: Unhandled transform type: "+d)}}),h},l=t=>{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t<r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=>{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=>{let o,i,a=[0,0,0,0];for(let h=0;h<3;++h)e[h]<t[h]&&e[h]<s[h]||t[h]<e[h]&&s[h]<e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]>o?a[h]=o:a[h]>i&&(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=>{let e=[];for(let s=0;s<16;++s){e[s]=0;for(let r=0;r<16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=>{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=>{let e=[],s=[],r=[];for(let s=0;s<4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t<8;++t){s[t]=[];for(let r=0;r<4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t<8;++t){r[t]=[];for(let e=0;e<8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \\n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error("mesh.js: argument to Affine.append is not affine!");let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)>r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t<4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s>=0&&s<e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s<4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t<4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t<4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))>r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute("type")||"bilinear"}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute("x")),n=Number(t.getAttribute("y"));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t<r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n<o;++n){let o=r[n].children;for(let r=0,i=o.length;r<i;++r){let i=r;0!==t&&++i;let h,d=o[r].getAttribute("path"),c="l";null!=d&&(c=(h=d.match(/\\s*([lLcC])\\s*(.*)/))[1]);let u=l(h[2]);switch(c){case"l":0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&&(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"L":0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&&(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"c":0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&&(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case"C":0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&&(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error("mesh.js: "+c+" invalid path type.")}if(0===t&&0===n||r>0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&&(h=Math.floor(255*a)),e&&(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&&(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if("bilinear"===this.type||s<2||r<2){let n;for(let o=0;o<s;++o)for(let s=0;s<r;++s){let r=[];for(let t=3*o,e=3*o+4;t<e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t<s;++t){w[t]=new Array(r);for(let e=0;e<r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t<s;++t)for(let e=0;e<r;++e)0!==t&&t!==x&&(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&&e!==g&&(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t<r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e<4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n>0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o>0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t<s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e<4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n>0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o>0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s<x;++s)for(let r=0;r<g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t<4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e<9;++e){g[t][e]=[];for(let s=0;s<9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]>255?g[t][e][s]=255:g[t][e][s]<0&&(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t<e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s<8;++s)for(let r=0;r<8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e<s;++e)for(let s=0,r=this.nodes[0].length;s<r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e<s;++e)for(let s=0,r=this.nodes[0].length;s<r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e<s;++e)for(let s=0,r=this.nodes[0].length;s<r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll("rect,circle,ellipse,path,text").forEach((r,n)=>{let o=r.getAttribute("id");o||(o="patchjs_shape"+n,r.setAttribute("id",o));const i=r.style.fill.match(/^url\\(\\s*"?\\s*#([^\\s"]+)"?\\s*\\)/),a=r.style.stroke.match(/^url\\(\\s*"?\\s*#([^\\s"]+)"?\\s*\\)/);if(i&&i[1]){const a=document.getElementById(i[1]);if(a&&"meshgradient"===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,"canvas");d(l,{width:i.width,height:i.height});const c=l.getContext("2d");let u=c.createImageData(i.width,i.height);const f=new b(a);"objectBoundingBox"===a.getAttribute("gradientUnits")&&f.scale(new x(i.width,i.height));const p=a.getAttribute("gradientTransform");null!=p&&f.transform(h(p)),"userSpaceOnUse"===a.getAttribute("gradientUnits")&&f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,"image");d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,"xlink:href",g),r.parentNode.insertBefore(y,r),r.style.fill="none";const w=document.createElementNS(t,"use");w.setAttributeNS(e,"xlink:href","#"+o);const m="patchjs_clip"+n,M=document.createElementNS(t,"clipPath");M.setAttribute("id",m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute("clip-path","url(#"+m+")"),u=null,l=null,g=null}}if(a&&a[1]){const o=document.getElementById(a[1]);if(o&&"meshgradient"===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute("stroke-miterlimit"))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,"canvas");d(p,{width:l,height:c});const y=p.getContext("2d");let g=y.createImageData(l,c);const w=new b(o);"objectBoundingBox"===o.getAttribute("gradientUnits")&&w.scale(new x(l,c));const m=o.getAttribute("gradientTransform");null!=m&&w.transform(h(m)),"userSpaceOnUse"===o.getAttribute("gradientUnits")&&w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,"image");d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,"xlink:href",S);const k="pattern_clip"+n,A=document.createElementNS(t,"pattern");d(A,{id:k,patternUnits:"userSpaceOnUse",width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke="url(#"+k+")",g=null,p=null,S=null}}})}();'
      }
    </script>
  </svg>
)

export default Logo
