<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   viewBox="0 0 150 150"
   version="1.1"
   id="SVGRoot"
   sodipodi:docname="icon-detail.svg"
   inkscape:version="1.1 (c68e22c387, 2021-05-23)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview837"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:document-units="px"
     showgrid="true"
     inkscape:zoom="46.295849"
     inkscape:cx="6.3612615"
     inkscape:cy="7.9812771"
     inkscape:window-width="1920"
     inkscape:window-height="1001"
     inkscape:window-x="-9"
     inkscape:window-y="-9"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer4">
    <inkscape:grid
       type="xygrid"
       id="grid900" />
  </sodipodi:namedview>
  <defs
     id="defs832" />
  <g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="Sum"
     style="display:inline" />
  <g
     inkscape:groupmode="layer"
     id="layer4"
     inkscape:label="Text"
     style="display:inline">
    <g
       id="g962"
       transform="matrix(0.02147605,0,0,0.02177145,7.2215551,6.0944096)">
      <g
         id="g1071"
         transform="translate(-410.04492,-428.17862)"
         style="display:inline">
        <path
           style="display:inline;fill:#39ff14;fill-opacity:1;stroke:#39ff14;stroke-width:0.807242;stroke-opacity:1"
           d="m 717.34547,765.05755 c -8.64611,-3.88764 -61.90244,-26.10738 -98.17486,-40.96071 -91.29967,-37.38665 -162.98627,-64.82158 -215.5058,-82.4755 -36.53207,-12.2799 -56.68986,-17.78588 -75.28962,-20.56496 -37.11048,-5.54486 -64.14721,-14.10649 -86.7388,-27.46729 -7.7562,-4.58707 -15.87751,-10.54329 -16.44755,-12.06273 -0.213,-0.56774 1.82144,-4.8565 4.52098,-9.53056 2.69953,-4.67405 5.58415,-9.85076 6.41026,-11.5038 l 1.502,-3.00553 -10.79943,-23.11987 c -5.9397,-12.71592 -12.24648,-26.05897 -14.01507,-29.65123 l -3.21563,-6.53133 -7.08855,-65.3135 c -9.80178,-90.31324 -9.10578,-81.90142 -7.18819,-86.87762 2.09259,-5.43032 11.26828,-24.20531 15.39616,-31.5031 1.77792,-3.14321 6.56241,-10.85837 10.63222,-17.14479 7.23586,-11.17687 7.49098,-11.73705 11.5262,-25.30899 11.21359,-37.71529 12.40897,-41.22914 14.02587,-41.22914 0.2384,0 10.14799,-1.66423 22.0213,-3.69833 l 21.58784,-3.69835 4.89854,-3.55845 c 33.59583,-24.40514 80.45182,-41.03124 133.80291,-47.47782 5.92641,-0.7161 20.65264,-1.49876 32.72495,-1.73924 12.07232,-0.24047 22.51191,-0.73749 23.19912,-1.10447 1.3898,-0.74223 21.89932,0.97311 35.46634,2.96626 58.95339,8.66093 112.9759,34.60769 152.57783,73.28238 13.95528,13.62854 35.39111,40.24509 35.39111,43.94462 0,0.96665 2.10785,5.09759 4.68414,9.17985 10.50503,16.64588 20.59577,37.23876 28.64037,58.44845 7.36531,19.4187 9.51191,26.69708 8.40731,28.50627 -0.83694,1.37078 -0.5494,1.55486 3.21828,2.06026 6.33045,0.8492 7.33967,1.9022 10.01605,10.45056 11.06855,35.35293 18.907,81.21277 21.73529,127.16517 1.04436,16.96794 0.53244,66.37071 -0.8242,79.5403 -1.06589,10.34713 -2.31058,12.05414 -8.59963,11.79389 -2.31846,-0.0959 -4.36489,-0.0196 -4.54763,0.16925 -0.18275,0.18901 -1.28599,5.84151 -2.45166,12.5611 -7.43363,42.85206 -19.55887,81.73413 -36.03454,115.55212 -6.72035,13.79412 -10.96156,21.25157 -12.0541,21.19491 -0.33891,-0.018 -1.87333,-0.59726 -3.40981,-1.28808 z M 426.73919,441.80746 c -5.06339,-1.59544 -10.47519,-6.68974 -12.68275,-11.93869 -4.75215,-11.29923 2.26148,-24.91398 14.29851,-27.75598 11.99871,-2.83296 23.86529,7.11974 24.01802,20.14431 0.0209,1.78924 0.21551,2.11924 0.72184,1.22461 0.96202,-1.69976 -0.29438,-8.97167 -2.20563,-12.76597 -6.91306,-13.72414 -25.30044,-15.86704 -35.79701,-4.17184 -3.53012,3.93324 -5.84068,9.96689 -5.83954,15.24906 6.5e-4,3.00398 3.57447,11.4042 6.1331,14.41579 3.1011,3.65007 9.04793,6.73058 13.02235,6.74571 1.32915,0.005 0.77193,-0.37793 -1.66889,-1.147 z M 750,387.17041 c -1.57798,-0.39122 -86.87938,-12.1186 -109.2788,-14.67961 -40.26748,-4.60395 -81.2348,-8.41585 -110.20467,-10.25427 -14.07477,-0.89317 -25.39816,-0.25627 -28.51708,1.604 -1.45162,0.86583 -1.16361,1.00982 2.92527,0.32448 1.03035,-0.1727 2.30207,-0.39805 3.84813,-0.6778 6.90507,-1.24939 6.96248,-1.24722 41.35609,1.57534 8.34087,0.6845 18.757,1.42556 23.14692,1.6468 12.38398,0.62411 61.58042,5.84054 96.17944,10.19817 10.30205,1.29751 83.75655,11.05916 80.5447,10.26289 z M 500.24335,365.10779 c 0,-0.22451 -0.1796,-0.40822 -0.3991,-0.40822 -0.21948,0 -0.39908,0.18371 -0.39908,0.40822 0,0.22452 0.1796,0.40821 0.39908,0.40821 0.2195,0 0.3991,-0.18369 0.3991,-0.40821 z M 527.38508,210 c -2.61182,-7.76489 -7.04082,-14.98041 -12.98116,-21.14827 -5.39354,-5.60009 -5.45933,-5.64058 -1.86134,-1.14547 3.72804,4.65758 12.44402,18.30264 12.44402,19.48141 0,1.21131 3.23797,8.3331 3.6139,7.94858 0.2096,-0.21438 -0.33735,-2.5257 -1.21542,-5.13625 z"
           id="path2037-6-8"
           sodipodi:nodetypes="sssssssscsscssssssscssssssssssssssssssssssssssssscssssssssssssssssssssss" />
        <path
           style="display:inline;fill:#252525;fill-opacity:1;stroke:none;stroke-opacity:1"
           d="m 731.60952,880.20332 c -10.83243,-4.76185 -77.5555,-31.97792 -123,-50.1712 -114.38631,-45.79347 -204.20005,-79.39748 -270,-101.02108 -45.76983,-15.04117 -71.02485,-21.78525 -94.32787,-25.18924 -46.49447,-6.79167 -80.36789,-17.27849 -108.67213,-33.64362 -9.71749,-5.61852 -19.89241,-12.91406 -20.60659,-14.77517 -0.26686,-0.69542 2.28202,-5.94855 5.66418,-11.67361 3.38216,-5.72507 6.9962,-12.06583 8.0312,-14.09058 l 1.88182,-3.68135 -13.53026,-28.31865 c -7.44164,-15.57525 -15.3432,-31.91864 -17.559013,-36.31864 l -4.02875,-8 -8.881,-80 c -12.28033,-110.62122 -11.40834,-100.31791 -9.00586,-106.41305 2.62174,-6.65142 14.11766,-29.64818 19.28934,-38.58695 2.22749,-3.85 8.221823,-13.3 13.320753,-21 9.06557,-13.69012 9.3852,-14.37628 14.4408,-31 14.04912,-46.19603 15.54678,-50.5 17.57254,-50.5 0.29868,0 12.71407,-2.03848 27.58974,-4.52996 l 27.04669,-4.52997 6.13721,-4.35861 c 42.0911,-29.89292 100.7954,-50.25758 167.6372,-58.15375 7.425,-0.87713 25.875,-1.83578 41,-2.13033 15.125,-0.29455 28.20442,-0.90333 29.06539,-1.35284 1.74124,-0.90912 27.43694,1.19194 44.43461,3.63327 73.86071,10.60844 141.54371,42.38962 191.15965,89.76079 17.48411,16.69307 44.34035,49.29466 44.34035,53.82607 0,1.18402 2.64086,6.24385 5.86859,11.24405 13.1614,20.3889 25.80375,45.61234 35.88257,71.59128 9.22774,23.78522 11.91715,32.70022 10.53323,34.91622 -1.04857,1.67903 -0.68833,1.90449 4.03209,2.52355 7.9312,1.04014 9.19562,2.32993 12.54876,12.80047 13.86742,43.30247 23.68794,99.47442 27.23142,155.75976 1.30843,20.78337 0.66707,81.29493 -1.03261,97.42587 -1.33542,12.6738 -2.89485,14.76466 -10.7742,14.44589 -2.9047,-0.11752 -5.46861,-0.0242 -5.69757,0.20729 -0.22895,0.23152 -1.61117,7.15505 -3.07159,15.38563 -9.31335,52.48783 -24.50467,100.11299 -45.14648,141.53532 -8.41969,16.89595 -13.73338,26.03026 -15.10219,25.96086 -0.42461,-0.0215 -2.34702,-0.7315 -4.27202,-1.57772 z M 367.51864,484.26667 c -6.34377,-1.95419 -13.12402,-8.19399 -15.88981,-14.62325 -5.95381,-13.84 2.83335,-30.51617 17.91413,-33.99723 15.03277,-3.46998 29.90003,8.7207 30.09139,24.67399 0.0263,2.19158 0.26999,2.59579 0.90435,1.5 1.20528,-2.08199 -0.36882,-10.98907 -2.76336,-15.63657 -8.66114,-16.81017 -31.69809,-19.43492 -44.84888,-5.10992 -4.42278,4.81768 -7.31758,12.20806 -7.31615,18.67799 8.1e-4,3.67947 4.47832,13.96856 7.68396,17.65735 3.88525,4.47083 11.33583,8.24404 16.31525,8.26255 1.66526,0.006 0.96713,-0.4629 -2.09088,-1.40491 z m 405.00264,-66.92283 c -1.977,-0.47918 -108.84827,-14.8436 -136.91176,-17.98049 -50.44978,-5.6392 -101.77636,-10.30825 -138.07174,-12.56005 -17.6338,-1.09402 -31.82051,-0.31391 -35.72808,1.96466 -1.81869,1.06051 -1.45786,1.23689 3.66495,0.39745 1.29091,-0.21153 2.8842,-0.48756 4.8212,-0.83021 8.65114,-1.53035 8.72305,-1.52768 51.81367,1.92957 10.45,0.83842 23.5,1.74612 29,2.0171 15.51547,0.76445 77.15205,7.15386 120.5,12.49135 12.9071,1.58927 104.93578,13.54594 100.91176,12.57062 z M 459.60952,390.32018 c 0,-0.275 -0.225,-0.5 -0.5,-0.5 -0.275,0 -0.5,0.225 -0.5,0.5 0,0.275 0.225,0.5 0.5,0.5 0.275,0 0.5,-0.225 0.5,-0.5 z m 34.00496,-189.98559 c -3.27224,-9.51091 -8.82119,-18.34893 -16.26363,-25.90369 -6.75739,-6.85935 -6.83983,-6.90895 -2.33202,-1.40305 4.67074,5.70489 15.59069,22.41821 15.59069,23.86202 0,1.48369 4.05675,10.20689 4.52772,9.73592 0.2626,-0.2626 -0.42264,-3.09364 -1.52276,-6.2912 z"
           id="path2037-63"
           sodipodi:nodetypes="sssssssscsscssssssscssssssssssssssssssssssssssssscssssssssssssssssssssss" />
      </g>
      <g
         id="g3290"
         transform="matrix(2.8977774,0.77645711,-0.77645711,2.8977774,66.829922,291.73939)">
        <path
           style="fill:#39ff14;fill-opacity:1;stroke-opacity:0.501961"
           id="path3184"
           d="m -137.156,-111.2065 c 0.0401,0.31867 -0.0758,0.63569 -0.0501,0.95263 0.0347,0.42738 0.17147,0.84241 0.2053,1.26985 0.0596,0.75303 0.0663,4.20159 0.0257,4.63156 -0.10284,1.08875 -0.36003,2.15735 -0.54005,3.23603 -0.25819,1.10949 -0.52489,2.217036 -0.77457,3.328473 -0.49869,2.219895 -0.8706,3.970636 -1.26126,6.199243 -0.52172,2.976301 -0.33423,2.20268 -0.73656,5.033629 -0.0937,0.658957 -0.20357,1.3155 -0.30536,1.97325 -0.10341,0.646822 -0.47348,2.098606 -0.11557,2.813496 0.56959,1.13769 1.86454,1.370463 2.96671,1.55872 1.0016,0.171079 2.02107,0.214614 3.03389,0.296236 1.42787,0.115069 2.85829,0.195851 4.28743,0.293776 1.54683,0.201476 3.10301,0.341 4.64051,0.604428 4.0472,0.693428 8.08586,1.864299 11.75806,3.727704 0.39507,0.200473 0.76907,0.44003 1.1536,0.660044 0.36687,0.256779 0.78142,0.518474 1.1126,0.83179 0.0722,0.06829 0.14542,0.140521 0.19113,0.228748 0.0311,0.06005 -0.0249,0.238173 0.0312,0.200464 4.10031,-2.754245 8.13165,-5.609793 12.197481,-8.414689 0,0 -12.579621,8.000996 -12.579621,8.000996 v 0 c 4.12867,-2.760195 8.25734,-5.52039 12.386014,-8.280585 -0.09863,0.06521 -0.184195,0.156878 -0.295907,0.195635 -0.199447,0.0692 -0.412467,0.09201 -0.621357,0.122598 -0.98906,0.144837 -1.44465,0.139424 -2.51956,0.198173 -0.71497,0.01336 -1.42983,0.04431 -2.14491,0.04009 -2.06422,-0.01219 -4.3268,-0.110192 -6.36636,-0.318756 -1.35181,-0.138236 -2.70409,-0.290857 -4.04264,-0.524944 -1.39117,-0.243289 -2.78043,-0.519607 -4.13887,-0.90585 -1.23181,-0.350241 -2.41043,-0.865991 -3.61564,-1.298987 -2.13328,-1.144281 -2.47762,-1.253241 -4.28049,-2.44683 -0.32727,-0.21667 -0.64012,-0.45453 -0.95393,-0.690275 -0.49358,-0.370798 -0.79454,-0.573028 -1.08203,-1.157042 -0.18011,-0.365883 -0.27256,-0.768737 -0.40884,-1.153105 -0.12025,-0.527275 -0.27813,-1.047358 -0.36074,-1.581824 -0.19714,-1.275422 -0.27278,-3.167171 -0.26979,-4.425041 0.002,-0.894722 0.01,-1.79109 0.0817,-2.682928 0.21079,-2.617957 0.50786,-3.661527 1.03763,-6.274017 1.21073,-4.03225 0.748,-2.98825 2.51518,-6.85505 0.79409,-1.73759 1.56487,-3.44592 2.99282,-4.7624 0.15919,-0.14676 0.34422,-0.26272 0.51632,-0.39408 0,0 -13.66913,5.76884 -13.66913,5.76884 z" />
        <path
           style="fill:#39ff14;fill-opacity:1;stroke-opacity:0.501961"
           id="path3186"
           d="m -137.30313,-93.835793 c 1.79728,-0.551635 3.67037,-0.771655 5.54962,-0.645975 0.84143,0.05627 1.67628,0.195192 2.50666,0.342301 1.97628,0.350116 3.36801,0.75912 5.30659,1.269444 1.77473,0.485008 2.99726,0.791389 4.71898,1.361619 0.56912,0.188491 1.12699,0.409398 1.69048,0.614097 0,0 9.41136,-6.553243 9.41136,-6.553243 v 0 c -0.75299,-0.06315 -1.50894,-0.09755 -2.25896,-0.189452 -2.43373,-0.298198 -2.68936,-0.43826 -5.09582,-1.029235 -0.8375,-0.261753 -1.68178,-0.502715 -2.5125,-0.785259 -0.24016,-0.08168 -4.01203,-1.487924 -4.3859,-1.629534 -0.52509,-0.19888 -1.99164,-0.70967 -2.58931,-1.10905 -0.13773,-0.092 -0.21643,-0.25083 -0.32465,-0.37625 0,0 -12.01655,8.730537 -12.01655,8.730537 z" />
        <path
           style="fill:#39ff14;fill-opacity:1;stroke-opacity:0.501961"
           id="path3188"
           d="m -137.771,-109.07833 c 0.12521,-0.0379 0.24766,-0.0864 0.37562,-0.11356 1.24923,-0.26503 2.56148,-0.27725 3.83017,-0.28376 2.54773,-0.0131 2.03252,0.001 4.60384,0.20785 2.9526,-0.026 5.89925,0.24034 8.79711,0.80535 1.44723,0.28217 2.61561,0.62739 4.02807,0.99332 0.54675,0.14165 1.09506,0.27725 1.64258,0.41587 0.41731,0.13539 0.83461,0.27077 1.25191,0.40615 0,0 10.11354,-7.1155 10.11354,-7.1155 v 0 c -0.58403,-0.0181 -1.16807,-0.0361 -1.75211,-0.0542 -3.23558,-0.23418 -0.86091,-0.0691 -4.37449,-0.29297 -3.56159,-0.22689 -7.16641,-0.43439 -10.57551,-1.59017 -2.00706,-0.45463 -1.74979,-0.3283 -3.54431,-0.96895 -0.81171,-0.28978 -1.64492,-0.6149 -2.2942,-1.2022 0,0 -12.10222,8.79278 -12.10222,8.79278 z" />
      </g>
    </g>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
